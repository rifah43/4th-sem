import binascii
import struct


IV = (0x6A09E667F3BCC908, 0xBB67AE8584CAA73B, 0x3C6EF372FE94F82B, 0xA54FF53A5F1D36F1, 0x510E527FADE682D1,
      0x9B05688C2B3E6C1F, 0x1F83D9ABFB41BD6B, 0x5BE0CD19137E2179)

K = {0x428a2f98d728ae22, 0x7137449123ef65cd,
    0xb5c0fbcfec4d3b2f, 0xe9b5dba58189dbbc,
    0x3956c25bf348b538, 0x59f111f1b605d019,
    0x923f82a4af194f9b, 0xab1c5ed5da6d8118,
    0xd807aa98a3030242, 0x12835b0145706fbe,
    0x243185be4ee4b28c, 0x550c7dc3d5ffb4e2,
    0x72be5d74f27b896f, 0x80deb1fe3b1696b1,
    0x9bdc06a725c71235, 0xc19bf174cf692694,
    0xe49b69c19ef14ad2, 0xefbe4786384f25e3,
    0x0fc19dc68b8cd5b5, 0x240ca1cc77ac9c65,
    0x2de92c6f592b0275, 0x4a7484aa6ea6e483,
    0x5cb0a9dcbd41fbd4, 0x76f988da831153b5,
    0x983e5152ee66dfab, 0xa831c66d2db43210,
    0xb00327c898fb213f, 0xbf597fc7beef0ee4,
    0xc6e00bf33da88fc2, 0xd5a79147930aa725,
    0x06ca6351e003826f, 0x142929670a0e6e70,
    0x27b70a8546d22ffc, 0x2e1b21385c26c926,
    0x4d2c6dfc5ac42aed, 0x53380d139d95b3df,
    0x650a73548baf63de, 0x766a0abb3c77b2a8,
    0x81c2c92e47edaee6, 0x92722c851482353b,
    0xa2bfe8a14cf10364, 0xa81a664bbc423001,
    0xc24b8b70d0f89791, 0xc76c51a30654be30,
    0xd192e819d6ef5218, 0xd69906245565a910,
    0xf40e35855771202a, 0x106aa07032bbd1b8,
    0x19a4c116b8d2d0c8, 0x1e376c085141ab53,
    0x2748774cdf8eeb99, 0x34b0bcb5e19b48a8,
    0x391c0cb3c5c95a63, 0x4ed8aa4ae3418acb,
    0x5b9cca4f7763e373, 0x682e6ff3d6b2b8a3,
    0x748f82ee5defb2fc, 0x78a5636f43172f60,
    0x84c87814a1f0ab72, 0x8cc702081a6439ec,
    0x90befffa23631e28, 0xa4506cebde82bde9,
    0xbef9a3f7b2c67915, 0xc67178f2e372532b,
    0xca273eceea26619c, 0xd186b8c721c0c207,
    0xeada7dd6cde0eb1e, 0xf57d4f7fee6ed178,
    0x06f067aa72176fba, 0x0a637dc5a2c898a6,
    0x113f9804bef90dae, 0x1b710b35131c471b,
    0x28db77f523047d84, 0x32caab7b40c72493,
    0x3c9ebe0a15c9bebc, 0x431d67c49c100d4c,
    0x4cc5d4becb3e42b6, 0x597f299cfc657e2a,
    0x5fcb6fab3ad6faec, 0x6c44198c4a475817}

A ,B, C, D, E, F, G, H = IV

W = [0]*80

def rotR(n, x):
    return n >> x | n << (64 - x)

def shiftR(n, x):
    return n >> x


def sumA(a):
    rot28 = rotR(a, 28)
    rot34 = rotR(a, 34)
    rot39 = rotR(a, 39)
    return rot28 ^ rot34 ^ rot39


def sumE(e):
    rot14 = rotR(e, 14)
    rot18 = rotR(e, 18)
    rot41 = rotR(e, 41)
    return rot14 ^ rot18 ^ rot41

def ch(e, f, g):
    return (e & f)^(~e & g)

def maj(a, b, c):
    return (a & b)^(b & c)^(a & c)

def sigma0(x):
    rot1 = rotR(x, 1)
    rot8 = rotR(x, 8)
    sh7 = shiftR(x, 7)
    return rot1 ^ rot8 ^ sh7

def sigma1(x):
    rot19 = rotR(x, 19)
    rot61 = rotR(x, 61)
    sh6 = shiftR(x, 6)
    return rot19 ^ rot61 ^ sh6

def SHA512(inMessage):

    sha512_hash = list(IV)
    a = A
    b = B
    c = C
    d = D
    e = E
    f = F
    g = G
    h = H
    for chunk_start in range(0, len(inMessage), 128):
        chunk = inMessage[chunk_start:chunk_start + 128]

        w = [0] * 80
        w[0:16] = struct.unpack('!16Q', chunk)

        for i in range(16, 80):
            w[i] = (w[i - 16] + sumA(a) + w[i - 7] + sumE(e))

        a, b, c, d, e, f, g, h = sha512_hash

    for i in range(80):
        T1 = h + ch(e, f, g) + sumE(e) + W[i] + K[i]
        T2 = sumA(a) + maj(a, b, c)
        h=g
        g=f
        f=e
        e=(d + T1)
        d=c
        c=b
        b=a
        a=(T1+T2)
    
    print(binascii.hexlify(b''.join(struct.pack('!Q', element) for element in sha512_hash),).decode('utf-8'))



def main():
    inMessage = "This is SHA-512"
    inMessage = ''.join(format(ord(i), '08b') for i in inMessage)
    inLen = len(inMessage)
    mod = inLen % 1024
    mod = 896 - mod
    if mod != 0:
        inMessage += "1"
        for i in range(inLen + 1, inLen + mod):
            inMessage += "0"

    sizeBin = ''.join(format(len(inMessage), '0128b'))
    inMessage = inMessage + sizeBin
    inMessage = bytes(inMessage, 'utf-8')

    SHA512(inMessage)


if __name__ == '__main__':
    main()
